[{"/home/pi/Projects/GAME/GAME-FRONTEND/src/App.js":"1","/home/pi/Projects/GAME/GAME-FRONTEND/src/store/UserStore.js":"2","/home/pi/Projects/GAME/GAME-FRONTEND/src/store/DeviceStore.js":"3","/home/pi/Projects/GAME/GAME-FRONTEND/src/components/NavBar.js":"4","/home/pi/Projects/GAME/GAME-FRONTEND/src/components/AppRouter.js":"5","/home/pi/Projects/GAME/GAME-FRONTEND/src/routes.js":"6","/home/pi/Projects/GAME/GAME-FRONTEND/src/utils/consts.js":"7","/home/pi/Projects/GAME/GAME-FRONTEND/src/http/deviceAPI.js":"8","/home/pi/Projects/GAME/GAME-FRONTEND/src/pages/Basket.js":"9","/home/pi/Projects/GAME/GAME-FRONTEND/src/pages/Admin.js":"10","/home/pi/Projects/GAME/GAME-FRONTEND/src/pages/Auth.js":"11","/home/pi/Projects/GAME/GAME-FRONTEND/src/pages/Shop.js":"12","/home/pi/Projects/GAME/GAME-FRONTEND/src/pages/DevicePage.js":"13","/home/pi/Projects/GAME/GAME-FRONTEND/src/http/userAPI.js":"14","/home/pi/Projects/GAME/GAME-FRONTEND/src/components/DeviceList.js":"15","/home/pi/Projects/GAME/GAME-FRONTEND/src/components/Pages.js":"16","/home/pi/Projects/GAME/GAME-FRONTEND/src/components/BrandBar.js":"17","/home/pi/Projects/GAME/GAME-FRONTEND/src/components/TypeBar.js":"18","/home/pi/Projects/GAME/GAME-FRONTEND/src/components/modals/CreateBrand.js":"19","/home/pi/Projects/GAME/GAME-FRONTEND/src/components/modals/EditMyDevice.js":"20","/home/pi/Projects/GAME/GAME-FRONTEND/src/components/modals/CreateType.js":"21","/home/pi/Projects/GAME/GAME-FRONTEND/src/components/modals/CreateDevice.js":"22","/home/pi/Projects/GAME/GAME-FRONTEND/src/components/DeviceItem.js":"23","/home/pi/Projects/GAME/GAME-FRONTEND/src/components/modals/DevicesUsername.js":"24","/home/pi/Projects/GAME/GAME-FRONTEND/src/index.js":"25","/home/pi/Projects/GAME/GAME-FRONTEND/src/http/index.js":"26"},{"size":389,"mtime":1724619274054,"results":"27","hashOfConfig":"28"},{"size":583,"mtime":1724619274144,"results":"29","hashOfConfig":"28"},{"size":1994,"mtime":1724619274134,"results":"30","hashOfConfig":"28"},{"size":2699,"mtime":1724619274074,"results":"31","hashOfConfig":"28"},{"size":823,"mtime":1724619274064,"results":"32","hashOfConfig":"28"},{"size":810,"mtime":1724619274134,"results":"33","hashOfConfig":"28"},{"size":234,"mtime":1724619274144,"results":"34","hashOfConfig":"28"},{"size":2078,"mtime":1724777469810,"results":"35","hashOfConfig":"28"},{"size":157,"mtime":1724619274124,"results":"36","hashOfConfig":"28"},{"size":2026,"mtime":1724668346818,"results":"37","hashOfConfig":"28"},{"size":3856,"mtime":1724619274124,"results":"38","hashOfConfig":"28"},{"size":2375,"mtime":1724619274134,"results":"39","hashOfConfig":"28"},{"size":2256,"mtime":1724619274124,"results":"40","hashOfConfig":"28"},{"size":713,"mtime":1724619274114,"results":"41","hashOfConfig":"28"},{"size":828,"mtime":1724619274074,"results":"42","hashOfConfig":"28"},{"size":831,"mtime":1724619274084,"results":"43","hashOfConfig":"28"},{"size":893,"mtime":1724619274074,"results":"44","hashOfConfig":"28"},{"size":1492,"mtime":1724619274084,"results":"45","hashOfConfig":"28"},{"size":2792,"mtime":1724619274084,"results":"46","hashOfConfig":"28"},{"size":2910,"mtime":1724758231659,"results":"47","hashOfConfig":"28"},{"size":1584,"mtime":1724619274094,"results":"48","hashOfConfig":"28"},{"size":5329,"mtime":1724777277180,"results":"49","hashOfConfig":"28"},{"size":3488,"mtime":1724763525570,"results":"50","hashOfConfig":"28"},{"size":1365,"mtime":1724619274094,"results":"51","hashOfConfig":"28"},{"size":457,"mtime":1724619274114,"results":"52","hashOfConfig":"53"},{"size":428,"mtime":1724619274114,"results":"54","hashOfConfig":"28"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1hvga30",{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"64","usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"57"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"57"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"57"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"57"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"57"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13htifi",{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pi/Projects/GAME/GAME-FRONTEND/src/App.js",[],["120","121"],"/home/pi/Projects/GAME/GAME-FRONTEND/src/store/UserStore.js",[],"/home/pi/Projects/GAME/GAME-FRONTEND/src/store/DeviceStore.js",[],"/home/pi/Projects/GAME/GAME-FRONTEND/src/components/NavBar.js",["122"],"import React, {useContext} from 'react';\r\nimport {Context} from \"../index\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {ADMIN_ROUTE, LOGIN_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport {fetchDevices} from \"../http/deviceAPI\";\r\nconst NavBar = observer(() => {\r\n    const {user, device} = useContext(Context)\r\n    const history = useHistory()\r\n\r\n    const logOut = () => {\r\n        user.setUser({})\r\n        user.setIsAuth(false)\r\n        localStorage.setItem('token', '')\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n                <NavLink onClick={() =>{\r\n                    device.setSelectedType({});\r\n                    device.setSelectedTypeBrand({});\r\n                    device.setTypesBrands([]);\r\n                    fetchDevices(null, null,1, device.limit).then(data => {\r\n                    device.setDevices(data.rows)\r\n                    device.setTotalCount(data.count)\r\n                })}} style={{color:'white'}} to={SHOP_ROUTE}>GAME RECORDS</NavLink>\r\n                <a className=\"ml-auto\" style={{cursor: 'pointer'}} href={'https://drive.google.com/file/d/1UMsLzhOD_ISOmEm370SO7SbLFtSdNs0n/view?usp=sharing'} target=\"_blank\">NFS Most Wanted</a>\r\n                {user.isAuth ?\r\n                    <Nav className=\"ml-auto\" style={{color: 'white'}}>\r\n                        <div style={{padding: '10px'}}>{user.user.email}</div>\r\n                        {/*<div style={{padding: '10px'}}>POINT: {user.userData.point}</div>*/}\r\n                        <Button\r\n                            variant={\"outline-light\"}\r\n                            onClick={() => history.push(ADMIN_ROUTE)}\r\n                        >\r\n                            Admin\r\n                        </Button>\r\n                        <Button\r\n                            variant={\"outline-light\"}\r\n                            onClick={() => logOut()}\r\n                            className=\"ml-2\"\r\n                        >\r\n                            Out\r\n                        </Button>\r\n                    </Nav>\r\n                    :\r\n                    <Nav className=\"ml-auto\" style={{color: 'white'}}>\r\n                        <Button variant={\"outline-light\"} onClick={() => history.push(LOGIN_ROUTE)}>Authorizations</Button>\r\n                    </Nav>\r\n                }\r\n            </Container>\r\n        </Navbar>\r\n\r\n    );\r\n});\r\n\r\nexport default NavBar;\r\n","/home/pi/Projects/GAME/GAME-FRONTEND/src/components/AppRouter.js",[],"/home/pi/Projects/GAME/GAME-FRONTEND/src/routes.js",[],"/home/pi/Projects/GAME/GAME-FRONTEND/src/utils/consts.js",[],"/home/pi/Projects/GAME/GAME-FRONTEND/src/http/deviceAPI.js",["123"],"import {$authHost, $host} from \"./index\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createType = async (type) => {\r\n    const {data} = await $authHost.post('api/type', type)\r\n    return data\r\n}\r\n\r\nexport const fetchTypes = async () => {\r\n    const {data} = await $host.get('api/type')\r\n    return data\r\n}\r\n\r\nexport const fetchDevicesUsername = async (username) => {\r\n    const {data} = await $host.get('api/device/username', {params: {\r\n        username\r\n    }})\r\n    return data\r\n}\r\n\r\nexport const fetchTypesBrands = async (name) => {\r\n    const {data} = await $host.get('api/typebrand', {params: {\r\n            name\r\n        }})\r\n    return data\r\n}\r\n\r\nexport const createBrand = async (brand, description) => {\r\n    const {data} = await $authHost.post('api/brand', brand, description)\r\n    return data\r\n}\r\n\r\nexport const fetchMyDevices= async (name) => {\r\n    const {data} = await $host.get('api/devicemy', {params: {\r\n            name\r\n        }})\r\n    return data\r\n}\r\n\r\nexport const fetchBrands = async () => {\r\n    const {data} = await $host.get('api/brand', )\r\n    return data\r\n}\r\n\r\nexport const createDevice = async (device) => {\r\n    try {\r\n        const {data} = await $authHost.post('api/device', device)\r\n        return data\r\n    }catch (e) {\r\n        alert('NO ADD!!! ==> Download file < 1mb')\r\n    }\r\n}\r\n\r\nexport const updateDeviceTimestate = async (device) => {\r\n    const {data} = await $authHost.post('api/device/update/timestate', device)\r\n    return data\r\n}\r\n\r\nexport const updateDeviceFile = async (device) => {\r\n    try {\r\n        const {data} = await $authHost.post('api/device/update/file', device)\r\n        return data\r\n    } catch (e) {\r\n        alert('NO ADD!!! ==> Download file < 1mb')\r\n    }\r\n}\r\n\r\nexport const fetchDevices = async (typeName, brandName, page, limit) => {\r\n    const {data} = await $host.get('api/device', {params: {\r\n            typeName, brandName, page, limit\r\n        }})\r\n    return data\r\n}\r\n\r\nexport const fetchOneDevice = async (id) => {\r\n    const {data} = await $host.get('api/device/' + id)\r\n    return data\r\n}\r\n","/home/pi/Projects/GAME/GAME-FRONTEND/src/pages/Basket.js",[],"/home/pi/Projects/GAME/GAME-FRONTEND/src/pages/Admin.js",[],"/home/pi/Projects/GAME/GAME-FRONTEND/src/pages/Auth.js",["124","125"],"import React, {useContext, useEffect, useRef, useState} from 'react';\r\nimport {Container, Form} from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\r\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\r\nimport {login, registration} from \"../http/userAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport axios from \"axios\";\r\n\r\nconst Auth = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const isLogin = location.pathname === LOGIN_ROUTE\r\n    const [email, setEmail] = useState(localStorage.getItem('pass') || '')\r\n    const [password, setPassword] = useState('')\r\n    const [reCAPTCHA, setReCAPTCHA] = useState(true)\r\n\r\n    const ipRef = useRef('')\r\n\r\n    useEffect(async () => {\r\n        const res = await axios.get(\"https://api.ipify.org/?format=json\");\r\n        ipRef.current = res.data.ip\r\n    }, [])\r\n\r\n    const click = async () => {\r\n        try {\r\n            let data;\r\n            if (isLogin) {\r\n                data = await login(email, password, ipRef.current);\r\n            } else {\r\n                data = await registration(email, password, ipRef.current);\r\n            }\r\n            user.setUser(user)\r\n            user.setIsAuth(true)\r\n            history.push(SHOP_ROUTE)\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n    }\r\n\r\n    const onChange = (value) => {\r\n        setReCAPTCHA(false)\r\n    }\r\n\r\n    return (\r\n        <Container\r\n            className=\"d-flex justify-content-center align-items-center\"\r\n            style={{height: window.innerHeight - 54}}\r\n        >\r\n            <Card style={{width: 600}} className=\"p-5\">\r\n                <h2 className=\"m-auto\">{isLogin ? 'Authorizations' : \"Registrations\"}</h2>\r\n                <Form className=\"d-flex flex-column\">\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Add Login...\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Add Password...\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                        type=\"password\"\r\n                    />\r\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\r\n                        {isLogin ?\r\n                            <div>\r\n                                No Account? <NavLink to={REGISTRATION_ROUTE}>Registration!</NavLink>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                Account? <NavLink to={LOGIN_ROUTE}>ENTER!</NavLink>\r\n                            </div>\r\n                        }\r\n                        <ReCAPTCHA\r\n                            sitekey=\"6Ld-qr0bAAAAAEXsi5tKq5g6Ddwg0oG6Aqmo9mmA\"\r\n                            onChange={onChange}\r\n                        />\r\n                        <Button\r\n                            disabled={reCAPTCHA}\r\n                            variant={\"outline-success\"}\r\n                            onClick={()=> {localStorage.setItem('pass', email); click()}}\r\n                        >\r\n                            {isLogin ? 'Enter' : 'Registration'}\r\n                        </Button>\r\n                    </Row>\r\n\r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Auth;\r\n","/home/pi/Projects/GAME/GAME-FRONTEND/src/pages/Shop.js",["126","127","128","129","130","131","132"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport {Container, Spinner} from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport TypeBar from \"../components/TypeBar\";\r\nimport BrandBar from \"../components/BrandBar\";\r\nimport DeviceList from \"../components/DeviceList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\r\nimport Pages from \"../components/Pages\";\r\nimport {check} from \"../http/userAPI\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst Shop = observer(() => {\r\n    const {device, user} = useContext(Context)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        check().then(data => {\r\n            user.setUser(jwt_decode(data.token))\r\n            user.setIsAuth(true)\r\n            //user.setUserData(data.user)\r\n        })\r\n            //.finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    // if (loading) {\r\n    //     return <Spinner animation={\"grow\"}/>\r\n    // }\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => {device.setTypes(data)})\r\n        fetchBrands().then(data => {device.setBrands(data)})\r\n        fetchDevices(null, null,1, device.limit).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchDevices(device.selectedType.name, null, device.page, device.limit).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [device.selectedType.name])\r\n\r\n\r\n    useEffect(() => {\r\n        fetchDevices(device.selectedType.name, device.selectedTypeBrand.description, device.page, device.limit).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [device.page, device.selectedTypeBrand.description])\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-2\">\r\n                <Col md={3}>\r\n                    <TypeBar/>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <BrandBar/>\r\n                    <DeviceList/>\r\n                    <Pages/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Shop;\r\n","/home/pi/Projects/GAME/GAME-FRONTEND/src/pages/DevicePage.js",["133"],"import React, {useEffect, useState} from 'react';\r\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\r\nimport bigStar from '../assets/bigStar.png'\r\nimport {useParams} from 'react-router-dom'\r\nimport {fetchOneDevice} from \"../http/deviceAPI\";\r\n\r\nconst DevicePage = () => {\r\n    const [device, setDevice] = useState({info: []})\r\n    const {id} = useParams()\r\n\r\n    useEffect(() => {\r\n        fetchOneDevice(id).then(data => setDevice(data))\r\n    }, [])\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + device.img}/>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Row className=\"d-flex flex-column align-items-center\">\r\n                        <h2>{device.name}</h2>\r\n                        <div\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:240, height: 240, backgroundSize: 'cover', fontSize:64}}\r\n                        >\r\n                            {device.rating}\r\n                        </div>\r\n                    </Row>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card\r\n                        className=\"d-flex flex-column align-items-center justify-content-around\"\r\n                        style={{width: 300, height: 300, fontSize: 32, border: '5px solid lightgray'}}\r\n                    >\r\n                        <h3>От: {device.price} руб.</h3>\r\n                        <Button variant={\"outline-dark\"}>Basket</Button>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-column m-3\">\r\n                <h1>Характеристики</h1>\r\n                {device.info.map((info, index) =>\r\n                    <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\r\n                        {info.title}: {info.description}\r\n                    </Row>\r\n                )}\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default DevicePage;\r\n","/home/pi/Projects/GAME/GAME-FRONTEND/src/http/userAPI.js",[],"/home/pi/Projects/GAME/GAME-FRONTEND/src/components/DeviceList.js",["134","135"],"import React, {useContext, useEffect, useRef} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {Row} from \"react-bootstrap\";\r\nimport DeviceItem from \"./DeviceItem\";\r\n\r\n//Number(device.timestate.replace(/[\\:]/g, ''))\r\n//Number(firstItem.timestate.replace(/[\\:]/g, ''))\r\n\r\n//Number(secondItem.timestate.replace(/[\\:]/g, ''))\r\n//.sort((firstItem, secondItem) => Number(firstItem.timestate.replace(/[\\:.]/g, '')) - Number(secondItem.timestate.replace(/[\\:.]/g, '')))}\r\nconst DeviceList = observer(() => {\r\n    const {device} = useContext(Context)\r\n    return (\r\n        <Row className=\"d-flex\">\r\n            {device.devices.map(devicer =>\r\n                <DeviceItem key={devicer.id} devicer={devicer}/>\r\n            )}\r\n        </Row>\r\n    );\r\n});\r\n\r\nexport default DeviceList;\r\n","/home/pi/Projects/GAME/GAME-FRONTEND/src/components/Pages.js",[],"/home/pi/Projects/GAME/GAME-FRONTEND/src/components/BrandBar.js",[],"/home/pi/Projects/GAME/GAME-FRONTEND/src/components/TypeBar.js",["136"],"import React, {useContext, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport {fetchDevices, fetchTypesBrands} from \"../http/deviceAPI\";\r\n\r\nconst TypeBar = observer(() => {\r\n    const {device} = useContext(Context)\r\n\r\n    const typesBrands = () => {\r\n        device.setSelectedTypeBrand({});\r\n        device.setTypesBrands([]);\r\n        fetchTypesBrands(device.selectedType.name).then(data => {\r\n            device.setTypesBrands(data)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ListGroup>\r\n            <button onClick={()=> {\r\n                device.setSelectedType({});\r\n                device.setSelectedTypeBrand({});\r\n                device.setTypesBrands([]);\r\n                fetchDevices(null, null, 1, device.limit).then(data => {\r\n                    device.setDevices(data.rows)\r\n                    device.setTotalCount(data.count)\r\n                })\r\n            }\r\n            }>All</button>\r\n\r\n            {device.types.map(type =>\r\n                <ListGroup.Item\r\n                    style={{cursor: 'pointer'}}\r\n                    active={type.id === device.selectedType.id}\r\n                    onClick={() => {device.setSelectedType(type); typesBrands()}}\r\n                    key={type.id}\r\n                >\r\n                    {type.name}\r\n                </ListGroup.Item>\r\n            )}\r\n        </ListGroup>\r\n    );\r\n});\r\n\r\nexport default TypeBar;\r\n","/home/pi/Projects/GAME/GAME-FRONTEND/src/components/modals/CreateBrand.js",["137","138","139","140","141","142"],"import React, {useEffect, useContext, useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button, Dropdown, Form} from \"react-bootstrap\";\r\nimport {createBrand, createDevice, createType, fetchBrands, fetchTypes} from \"../../http/deviceAPI\";\r\nimport {Context} from \"../../index\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst CreateBrand = observer(({show, onHide}) => {\r\n    const [value, setValue] = useState('')\r\n    const {device} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n    }, [])\r\n\r\n    const addBrand = async () => {\r\n        try {\r\n            await createBrand({name: device.selectedType.name, description: value}).then(data => {\r\n            device.setBrands(data)\r\n            setValue('')\r\n            onHide()\r\n            })\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Add Descriptions\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{device.selectedType.name || \"GAME\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.types.map(type =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => device.setSelectedType(type)}\r\n                                    key={type.id}\r\n                                >\r\n                                    {type.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Form.Control\r\n                        value={value}\r\n                        onChange={e => setValue(e.target.value)}\r\n                        placeholder={\"Enter Description Game (Map or Track)\"}\r\n                    />\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Close</Button>\r\n                {  device.selectedType.name == null || device.selectedType.name == undefined || value =='' ?\r\n                    <div></div>\r\n                    :\r\n                    <div>\r\n                        <Button variant=\"outline-success\" onClick={addBrand}>Add</Button>\r\n                    </div>\r\n                }\r\n\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default CreateBrand;\r\n","/home/pi/Projects/GAME/GAME-FRONTEND/src/components/modals/EditMyDevice.js",["143"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button, Col, Row} from \"react-bootstrap\";\r\nimport {Context} from \"../../index\";\r\nimport {\r\n    fetchMyDevices,\r\n    updateDeviceFile,\r\n    updateDeviceTimestate\r\n} from \"../../http/deviceAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\n\r\nconst EditMyDevice = observer(({show, onHide}) => {\r\n    const {device, user} = useContext(Context)\r\n    const [rend, setRend] = useState(false)\r\n\r\n    useEffect(() => {\r\n        fetchMyDevices(user.user.email).then(data => {\r\n            device.setMyDevices(data)\r\n            setRend(false)\r\n        })\r\n    },[onHide, rend])\r\n\r\n\r\n    const FormDataFile = (id, imgDel, file) => {\r\n        const formData = new FormData()\r\n        formData.append('id', id)\r\n        formData.append('imgdel', imgDel)\r\n        formData.append('file', file)\r\n        updateDeviceFile(formData).then( data => setRend(true))\r\n    }\r\n\r\n    const FormDataTimestate = (id, timestate) => {\r\n        const formData = new FormData()\r\n        formData.append('id', id)\r\n        formData.append('timestate', timestate)\r\n        updateDeviceTimestate(formData).then( data => setRend(true))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Edit Event\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                {device.myDevices.map((device, index) =>\r\n                    <ListGroup.Item\r\n                        style={{cursor: 'pointer'}}\r\n                        key={index}\r\n                    >\r\n                        <Row>\r\n                            <Col>{device.name}</Col>\r\n                            <Col>{device.description}</Col>\r\n                            <Col><input type=\"file\" onChange={ e => FormDataFile(device.id, device.img, e.target.files[0])} /></Col>\r\n                            <Col>\r\n                                <input\r\n                                    type=\"time\"\r\n                                    step=\"0.001\"\r\n                                    className=\"form-control\"\r\n                                    defaultValue={device.timestate}\r\n                                    onChange={e => FormDataTimestate(device.id, e.target.value)}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                )}\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Close</Button>\r\n            </Modal.Footer>\r\n\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default EditMyDevice;\r\n","/home/pi/Projects/GAME/GAME-FRONTEND/src/components/modals/CreateType.js",[],"/home/pi/Projects/GAME/GAME-FRONTEND/src/components/modals/CreateDevice.js",["144","145","146"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\r\nimport {Context} from \"../../index\";\r\nimport {createDevice, fetchBrands, fetchTypes, fetchTypesBrands} from \"../../http/deviceAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst CreateDevice = observer(({show, onHide}) => {\r\n    const {device, user} = useContext(Context)\r\n    const [timeState, setTimeState] = useState('')\r\n    const [linkVideo, setLinkVideo] = useState('')\r\n    const [typeState, setTypeState] = useState({})\r\n    const [file, setFile] = useState(null)\r\n    const [hideDescription, setHideDescription] = useState(false)\r\n    const [hideTime, setHideTime] = useState(false)\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n    }, [])\r\n\r\n    const typesBrands = () => {\r\n        fetchTypesBrands(device.selectedType.name).then(data => device.setTypesBrands(data))\r\n    }\r\n    const selectFile = e => {\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    const addDevice = () => {\r\n        const formData = new FormData()\r\n        formData.append('name', device.selectedType.name)\r\n        formData.append('description', device.selectedTypeBrand.description)\r\n        formData.append('username', user.user.email)\r\n        formData.append('timestate', timeState)\r\n        formData.append('linkvideo', linkVideo)\r\n        formData.append('img', file)\r\n        createDevice(formData).then(data => onHide())\r\n        setFile(null)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Add Event\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{  typeState.name  || 'GAME' }</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.types.map(type =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => { device.setSelectedType(type); typesBrands(); setHideDescription(true); setTypeState(type)}}\r\n                                    key={type.id}\r\n\r\n                                >\r\n                                    {type.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    { hideDescription ?\r\n                        <div>\r\n                            <Dropdown className=\"mt-2 mb-2\">\r\n                                <Dropdown.Toggle>{device.selectedTypeBrand.description || \"Description\"}</Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n                                    {device.typesBrands.map(brand =>\r\n                                        <Dropdown.Item\r\n                                            onClick={() => {device.setSelectedTypeBrand(brand); setHideTime(true)}}\r\n                                            key={brand.id}\r\n                                        >\r\n                                            {brand.description}\r\n                                        </Dropdown.Item>\r\n                                    )}\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </div>\r\n                        :\r\n                        <div></div>\r\n                    }\r\n                    { hideTime ?\r\n                        <div>\r\n                            <input type=\"time\" step=\"0.001\"\r\n                                   defaultValue=\"00:00\"\r\n                                   className=\"form-control\"\r\n                                   onChange={e => setTimeState(e.target.value)}\r\n                            />\r\n                            <input defaultValue=''\r\n                                   className=\"form-control\"\r\n                                   placeholder={\"Add Link Video\"}\r\n                                   onChange={e => setLinkVideo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        :\r\n                        <div></div>\r\n                    }\r\n\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        type=\"file\"\r\n                        onChange={selectFile}\r\n                    />\r\n                    <hr/>\r\n                </Form>\r\n            </Modal.Body>\r\n            { hideTime && timeState.length > 2  && file != null ?\r\n                <div>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"outline-success\" onClick={addDevice}>Add</Button>\r\n                    </Modal.Footer>\r\n                </div>\r\n                :\r\n                <div></div>\r\n            }\r\n\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Close</Button>\r\n            </Modal.Footer>\r\n\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default CreateDevice;\r\n","/home/pi/Projects/GAME/GAME-FRONTEND/src/components/DeviceItem.js",["147","148","149"],"import React, {useContext, useState} from 'react';\r\nimport {Card, Row, Col, NavLink, Button} from \"react-bootstrap\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Modal from 'react-modal';\r\nimport DevicesUsername from \"./modals/DevicesUsername\";\r\nimport {fetchDevicesUsername} from \"../http/deviceAPI\";\r\nimport {Context} from \"../index\";\r\nconst moment = require('moment');\r\n\r\n\r\nconst DeviceItem = ({devicer}) => {\r\n    const {device} = useContext(Context)\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [deviceVisible, setDeviceVisible] = useState(false)\r\n    const [devicesUsername, setDevicesUsername] = useState([])\r\n\r\n    const customStyles = {\r\n        content : {\r\n            // style={{ marginLeft: 'auto', marginRight: 'auto' }}\r\n        },\r\n        overlay: {\r\n            zIndex: 999999999,\r\n            backgroundColor: 'transparent'\r\n        }\r\n    };\r\n\r\n    const devicesUsernameFunc = (username) => {\r\n        fetchDevicesUsername(username).then(data => {\r\n            setDevicesUsername(data)\r\n            device.setSelectedDevicesUsername(data);\r\n            setDeviceVisible(true)\r\n        })\r\n    }\r\n\r\n    return (\r\n\r\n\r\n            <Card style={{width: '100%'}} border={\"light\"}>\r\n                <Row style={{width:'100%'}}>\r\n                    <Col md={2} className={\"mt-3\"}>\r\n                        <div className='jook-container'>\r\n                            <Modal\r\n                                style={customStyles}\r\n                                ariaHideApp={false}\r\n                                isOpen={showModal}\r\n                                onRequestClose={()=>setShowModal(false)}\r\n                            >\r\n                                <div>\r\n                                    <Image style={{ margin: '0 auto', display: 'block', width:\"55%\", cursor: 'pointer' }} src={process.env.REACT_APP_API_URL + 'image/full/' + devicer.img}  onClick={() => setShowModal(false)}/>\r\n                                </div>\r\n                                <div>\r\n                                    <Col style={{}}>Create {moment(devicer.createdAt).format('YYYY-MM-DD HH:mm:ss')}</Col>\r\n                                </div>\r\n                                <div>\r\n                                    <Col>\r\n                                        Link Video <a style={{cursor: 'pointer'}} href={devicer.linkvideo} target=\"_blank\">{devicer.linkvideo}</a>\r\n                                    </Col>\r\n                                </div>\r\n                            </Modal>\r\n                        </div>\r\n                    </Col>\r\n\r\n                    <Col style={{}}>{devicer.name}</Col>\r\n                    <Col style={{}}>{devicer.description}</Col>\r\n                    <Col style={{}}>\r\n                        <NavLink\r\n                            style={{cursor: 'pointer'}}\r\n                            onClick={() => {devicesUsernameFunc(devicer.username)}}\r\n                        >{devicer.username} </NavLink>\r\n                    </Col>\r\n                    <Col style={{}}> {devicer.timestate.substring(3)} </Col>\r\n                    <Col style={{cursor: 'pointer'}}>  <Image width={50} height={20} src={process.env.REACT_APP_API_URL + 'image/small/' + devicer.img} onClick={() => setShowModal(true)}/></Col>\r\n                </Row>\r\n\r\n                <DevicesUsername show={deviceVisible} onHide={() => setDeviceVisible(false)}/>\r\n            </Card>\r\n\r\n    );\r\n};\r\n\r\nexport default DeviceItem;\r\n","/home/pi/Projects/GAME/GAME-FRONTEND/src/components/modals/DevicesUsername.js",["150","151","152","153"],"import React, {useContext, useEffect, useRef, useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button, Card, Col, Row} from \"react-bootstrap\";\r\nimport {Context} from \"../../index\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\n\r\nconst DevicesUsername = observer(({show, onHide}) => {\r\n    const {device} = useContext(Context)\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                   Record\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                {device.selectedDevicesUsername.map(deviceUsername =>\r\n                    <Row key={deviceUsername.id} >\r\n                        <Col style={{}}>{deviceUsername.name}</Col>\r\n                        <Col style={{}}>{deviceUsername.description}</Col>\r\n                        <Col>\r\n                            {deviceUsername.timestate}\r\n                        </Col>\r\n                    </Row>\r\n                )}\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Close</Button>\r\n            </Modal.Footer>\r\n\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default DevicesUsername;\r\n","/home/pi/Projects/GAME/GAME-FRONTEND/src/index.js",[],"/home/pi/Projects/GAME/GAME-FRONTEND/src/http/index.js",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":33,"column":17,"nodeType":"160","messageId":"161","endLine":33,"endColumn":176,"fix":"162"},{"ruleId":"163","severity":1,"message":"164","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":18},{"ruleId":"167","severity":1,"message":"168","line":25,"column":15,"nodeType":"169","endLine":28,"endColumn":6},{"ruleId":"163","severity":1,"message":"170","line":36,"column":17,"nodeType":"165","messageId":"166","endLine":36,"endColumn":21},{"ruleId":"163","severity":1,"message":"171","line":2,"column":20,"nodeType":"165","messageId":"166","endLine":2,"endColumn":27},{"ruleId":"163","severity":1,"message":"172","line":17,"column":12,"nodeType":"165","messageId":"166","endLine":17,"endColumn":19},{"ruleId":"163","severity":1,"message":"173","line":17,"column":21,"nodeType":"165","messageId":"166","endLine":17,"endColumn":31},{"ruleId":"167","severity":1,"message":"174","line":26,"column":8,"nodeType":"175","endLine":26,"endColumn":10,"suggestions":"176"},{"ruleId":"167","severity":1,"message":"177","line":40,"column":8,"nodeType":"175","endLine":40,"endColumn":10,"suggestions":"178"},{"ruleId":"167","severity":1,"message":"177","line":47,"column":8,"nodeType":"175","endLine":47,"endColumn":34,"suggestions":"179"},{"ruleId":"167","severity":1,"message":"177","line":55,"column":8,"nodeType":"175","endLine":55,"endColumn":59,"suggestions":"180"},{"ruleId":"167","severity":1,"message":"181","line":13,"column":8,"nodeType":"175","endLine":13,"endColumn":10,"suggestions":"182"},{"ruleId":"163","severity":1,"message":"183","line":1,"column":28,"nodeType":"165","messageId":"166","endLine":1,"endColumn":37},{"ruleId":"163","severity":1,"message":"184","line":1,"column":39,"nodeType":"165","messageId":"166","endLine":1,"endColumn":45},{"ruleId":"163","severity":1,"message":"185","line":1,"column":28,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"186","line":4,"column":22,"nodeType":"165","messageId":"166","endLine":4,"endColumn":34},{"ruleId":"163","severity":1,"message":"187","line":4,"column":36,"nodeType":"165","messageId":"166","endLine":4,"endColumn":46},{"ruleId":"163","severity":1,"message":"188","line":4,"column":48,"nodeType":"165","messageId":"166","endLine":4,"endColumn":59},{"ruleId":"167","severity":1,"message":"177","line":14,"column":8,"nodeType":"175","endLine":14,"endColumn":10,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":63,"column":81,"nodeType":"192","messageId":"193","endLine":63,"endColumn":83},{"ruleId":"190","severity":1,"message":"191","line":63,"column":103,"nodeType":"192","messageId":"193","endLine":63,"endColumn":105},{"ruleId":"167","severity":1,"message":"194","line":23,"column":7,"nodeType":"175","endLine":23,"endColumn":21,"suggestions":"195"},{"ruleId":"163","severity":1,"message":"196","line":3,"column":33,"nodeType":"165","messageId":"166","endLine":3,"endColumn":36},{"ruleId":"163","severity":1,"message":"197","line":3,"column":38,"nodeType":"165","messageId":"166","endLine":3,"endColumn":41},{"ruleId":"167","severity":1,"message":"177","line":20,"column":8,"nodeType":"175","endLine":20,"endColumn":10,"suggestions":"198"},{"ruleId":"163","severity":1,"message":"199","line":2,"column":34,"nodeType":"165","messageId":"166","endLine":2,"endColumn":40},{"ruleId":"163","severity":1,"message":"200","line":15,"column":12,"nodeType":"165","messageId":"166","endLine":15,"endColumn":27},{"ruleId":"158","severity":1,"message":"159","line":56,"column":52,"nodeType":"160","messageId":"161","endLine":56,"endColumn":124,"fix":"201"},{"ruleId":"163","severity":1,"message":"183","line":1,"column":28,"nodeType":"165","messageId":"166","endLine":1,"endColumn":37},{"ruleId":"163","severity":1,"message":"184","line":1,"column":39,"nodeType":"165","messageId":"166","endLine":1,"endColumn":45},{"ruleId":"163","severity":1,"message":"185","line":1,"column":47,"nodeType":"165","messageId":"166","endLine":1,"endColumn":55},{"ruleId":"163","severity":1,"message":"202","line":3,"column":17,"nodeType":"165","messageId":"166","endLine":3,"endColumn":21},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"205","text":"206"},"no-unused-vars","'jwt_decode' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'data' is assigned a value but never used.","'Spinner' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["207"],"React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["208"],["209"],["210"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["211"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'createDevice' is defined but never used.","'createType' is defined but never used.","'fetchBrands' is defined but never used.",["212"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'device' and 'user.user.email'. Either include them or remove the dependency array.",["213"],"'Row' is defined but never used.","'Col' is defined but never used.",["214"],"'Button' is defined but never used.","'devicesUsername' is assigned a value but never used.",{"range":"215","text":"206"},"'Card' is defined but never used.","no-global-assign","no-unsafe-negation",[1476,1476]," rel=\"noreferrer\"",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"218","fix":"226"},{"desc":"227","fix":"228"},{"desc":"218","fix":"229"},[2396,2396],"Update the dependencies array to be: [user]",{"range":"230","text":"231"},"Update the dependencies array to be: [device]",{"range":"232","text":"233"},"Update the dependencies array to be: [device, device.selectedType.name]",{"range":"234","text":"235"},"Update the dependencies array to be: [device, device.page, device.selectedTypeBrand.description]",{"range":"236","text":"237"},"Update the dependencies array to be: [id]",{"range":"238","text":"239"},{"range":"240","text":"233"},"Update the dependencies array to be: [device, onHide, rend, user.user.email]",{"range":"241","text":"242"},{"range":"243","text":"233"},[997,999],"[user]",[1407,1409],"[device]",[1640,1666],"[device, device.selectedType.name]",[1931,1982],"[device, device.page, device.selectedTypeBrand.description]",[470,472],"[id]",[577,579],[720,734],"[device, onHide, rend, user.user.email]",[923,925]]